const balanceTotalEl=document.querySelector(".balance p"),incomeTotalEl=document.querySelector(".income p"),expenseTotalEl=document.querySelector(".expense p"),incomeEl=document.querySelector("#menu-income"),expenseEl=document.querySelector("#menu-expense"),allEl=document.querySelector("#menu-all"),incomeList=document.querySelector("#menu-income .menu__ul"),expenseList=document.querySelector("#menu-expense .menu__ul"),allList=document.querySelector("#menu-all .menu__ul"),mainMenu=document.querySelector(".menu"),arrow=document.querySelector(".menu__arrow"),allButton=document.querySelector(".filter__btn-all"),incomeButton=document.querySelector(".filter__btn-income"),expenseButton=document.querySelector(".filter__btn-expense"),categoryInput=document.querySelector(".input__category"),costInput=document.querySelector(".input__cost"),select=document.querySelector(".circulation__select"),addButton=document.querySelector(".add__button");let ENTRY_LIST,balance=0,income=0,expense=0;function deleteOrEdit(e){const t=e.target,n=t.parentNode.parentNode;t.classList.contains("delete")?deleteEntry(n):t.classList.contains("edit")&&editEntry(n)}function deleteEntry(e){ENTRY_LIST.splice(e.id,1),updateUI()}function updateUI(){income=calculateTotal("income",ENTRY_LIST),expense=calculateTotal("expense",ENTRY_LIST),balance=calculateBalance(income,expense),balanceTotalEl.innerText=`Balance: ${balance}$`,incomeTotalEl.innerText=`Income: ${income}$`,expenseTotalEl.innerText=`Expense: ${expense}$`,clearElements([expenseList,incomeList,allList]),ENTRY_LIST.forEach((e,t)=>{"expense"===e.type?showEntry(expenseList,e.type,e.category,e.amount,t):"income"===e.type&&showEntry(incomeList,e.type,e.category,e.amount,t),showEntry(allList,e.type,e.category,e.amount,t)}),localStorage.setItem("entry_list",JSON.stringify(ENTRY_LIST))}function showEntry(e,t,n,c,l){const o=`<li id="${l}" class="menu__li">\n  <div class="category">${n}</div>\n  <div class="amountAndType">\n  <div class="amount">${c}</div>\n  <div class="type">${t}</div>\n  </div>\n  <div class="aditional">\n    <div class="edit"><i class="fas fa-edit fa-2x"></i></div>\n    <div class="delete"><i class="fas fa-times fa-2x"></i></div>\n  </div>\n  </li>`;e.insertAdjacentHTML("afterbegin",o)}function clearElements(e){e.forEach(e=>{e.innerHTML=""})}function calculateTotal(e,t){let n=0;return t.forEach(t=>{t.type==e&&(n+=t.amount)}),n}function calculateBalance(e,t){return e-t}function clearInputs(e){e.forEach(e=>{e.value=""})}function active(e){e.classList.add("active")}function inactive(e){e.forEach(e=>{e.classList.remove("active")})}function show(e){e.classList.remove("hide")}function hide(e){e.forEach(e=>{e.classList.add("hide")})}function deletePosition(e){const t=e.target.parentNode;ENTRY_LIST.splice(t.id,1),updateUI()}ENTRY_LIST=JSON.parse(localStorage.getItem("entry_list"))||[],updateUI(),expenseButton.addEventListener("click",(function(){active(expenseButton),inactive([incomeButton,allButton]),show(expenseEl),hide([incomeEl,allEl])})),incomeButton.addEventListener("click",(function(){active(incomeButton),inactive([expenseButton,allButton]),show(incomeEl),hide([expenseEl,allEl])})),allButton.addEventListener("click",(function(){active(allButton),inactive([incomeButton,expenseButton]),show(allEl),hide([incomeEl,expenseEl])})),arrow.addEventListener("click",(function(){arrow.classList.toggle("active"),mainMenu.classList.toggle("active")})),addButton.addEventListener("click",(function(){if(!categoryInput.value||!costInput.value)return;let e={type:select.value,category:categoryInput.value,amount:Number(costInput.value)};ENTRY_LIST.push(e),updateUI(),clearInputs([categoryInput,costInput])})),incomeList.addEventListener("click",deleteOrEdit),expenseList.addEventListener("click",deleteOrEdit),allList.addEventListener("click",deleteOrEdit);